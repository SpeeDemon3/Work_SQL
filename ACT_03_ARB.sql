-- USO LA TABLA PEDIDO
USE PEDIDOS;
-- 1.CREO LA TABLA 'PEDIDO_DESC' CON LOS CAMPOS DEL PEDIDO-> CODIGO, CANTIDAD,NOMBRE DEL CLIENTE,
-- NOMBRE DEL VENDEDOR, NOMBRE DEL PRODUCTO Y PRECIO DEL PRODUCTO.
CREATE TABLE PEDIDO_DESC
AS SELECT PED.CODIGO, PED.CANTIDAD, CL.NOMBRE AS 'CLIENTE', VEN.NOMBRE AS 'VENDEDOR',
		  PROD.DESCRIPCION, PROD.PRECIO
FROM CLIENTE CL INNER JOIN PEDIDO PED ON CL.CODIGO=PED.CLIENTE
				INNER JOIN VENDEDOR VEN ON VEN.CODIGO=PED.VENDEDOR
				INNER JOIN PRODUCTO PROD ON PROD.CODIGO=PED.PRODUCTO;

-- COMPRUEBO QUE SEA CREADO LA TABLA PEDIDO_DESC
SELECT * FROM PEDIDO_DESC;

-- 2. CREO BASE DE DATOS LLAMADA BACKUPPEDIDO
CREATE DATABASE BACKUPPEDIDO;

-- UTILIZA LA BASE DE DATOS BACKUPPEDIDO
USE BACKUPPEDIDO;

-- 2A. CREO TABLA LLAMADA VENDEDORSENIOR CON TODOS LOS DATOS DE LOS VENDEDORES DE MAS DE 45 AÑOS
CREATE TABLE VENDEDORSENIOR AS SELECT VENDEDOR.*
FROM PEDIDOS.VENDEDOR
WHERE VENDEDOR.EDAD > 45;

SELECT * FROM VENDEDORSENIOR;

-- 2B. CREO UNA TABLA LLAMADA PEDIDOS2000 CON TODOS LOS PEDIDOS ANTERIORES AL AÑO 2010
CREATE TABLE PEDIDOS2000 AS SELECT PEDIDO.*
FROM PEDIDOS.PEDIDO
WHERE PEDIDO.FECHA < '2010-01-01';

SELECT * FROM PEDIDOS2000;

-- 2C. CREO UNA TABLA LLAMADA OPERACIONES CON EL CODIGO DEL PEDIDO, FECHA, NOMBRE DEL PRODUCTO,
-- FABRICANTE, NOMBRE DEL VENDEDOR, PRECIO Y NOMBRE DEL CLIENTE
CREATE TABLE OPERACIONES AS SELECT PEDIDO.CODIGO AS 'CODIGO DEL PEDIDO', PEDIDO.FECHA AS 'FECHA DEL PEDIDO', 
								   PRODUCTO.DESCRIPCION AS 'NOMBRE PRODUCTO', PRODUCTO.FABRICANTE,
								   VENDEDOR.NOMBRE AS 'NOMBRE VENDEDOR', PRODUCTO.PRECIO, 
                                   CLIENTE.NOMBRE AS 'NOMBRE CLIENTE'
FROM PEDIDOS.PRODUCTO INNER JOIN PEDIDOS.PEDIDO 
					  ON PRODUCTO.CODIGO = PEDIDO.FABRICANTE
					  INNER JOIN PEDIDOS.CLIENTE 
					  ON PEDIDO.CLIENTE = CLIENTE.CODIGO
					  INNER JOIN PEDIDOS.VENDEDOR
					  ON VENDEDOR.CODIGO = PEDIDO.VENDEDOR;						

-- COMPRUEBO LA TABLA OPERACIONES
SELECT * FROM OPERACIONES;

-- 3. AÑADO UN NUEVO CAMPO A LA TABLA PRODUCTOS LLAMADO DTO DE TIPO DECIMAL(4,2) Y ACTUALIZO 
-- ESE CAMPO CON EL VALOR 5 PARA TODOS LOS PRODUCTOS DEL FABRICANTE ACI CON PRECIO SUPERIOR A 50
USE PEDIDOS;
ALTER TABLE PRODUCTO ADD COLUMN DTO DECIMAL(4,2);

-- COMPRUEBO QUE SE AÑADIO EL CAMPO DTO EN LA TABLA PRODUCTO
SELECT * FROM PRODUCTO;

-- ACTUALIZO EL CAMPO DTO CON EL VALOR 5 PARA LOS PRODUCTOS DEL FABRICANTE ACI CON PRECIO SUPERIOR A 50
UPDATE PRODUCTO 
SET DTO = 5
WHERE FABRICANTE = 'ACI' AND PRECIO > 50;

-- COMPRUEBO LA ACTUALIZACION DEL CAMPO DTO
SELECT * FROM PRODUCTO ORDER BY FABRICANTE;

-- 4 AÑADO UN NUEVO CAMPO A LA TABLA VENDEDOR Y GUARDO EN ESE CAMPO LA ANTIGUEDAD DE ESE VENDEDOR EN AÑOS
SELECT * FROM VENDEDOR;
ALTER TABLE VENDEDOR ADD ANTIGUEDAD SMALLINT(5) AFTER FECHA_ALTA;

-- COMPRUEBO QUE SE AÑADIO EL CAMPO ANTIGUEDAD
SELECT * FROM VENDEDOR;

-- GUARDO EN EL CAMPO ANTIGUEDAD, LA ANTIGUEDAD DE LOS VENDEDORES EN AÑOS
UPDATE VENDEDOR SET ANTIGUEDAD = TIMESTAMPDIFF(YEAR, FECHA_ALTA, CURDATE());
SELECT * FROM VENDEDOR;

-- 5. MODIFICO EL CODIGO DE LA OFICINA DE OLOT POR EL NUMERO 13, ACTUALIZO EL CODIGO DE FORMA 
-- AUTOMATICA DE TODOS LOS VENDEDORES PERTENECIENTES A ESA OFICINA

-- ELIMINO LA CLAVE FORANIA QUE ASOCIA VENDEDOR CON OFICINA
SELECT * FROM OFICINA;
ALTER TABLE VENDEDOR DROP FOREIGN KEY FK_VENDEDOR_OFICINA;

-- AÑADO UNA NUEVA CLAVE FORANIA A LA TABLA VENDEDOR QUE LA ASOCIE CON SU OFICINA Y QUE SE ACTUALICE
-- EN CASCADA AL HABER MODIFICACIONES
ALTER TABLE vendedor 
ADD CONSTRAINT FK_VENDEDOR_OFICINA FOREIGN KEY(OFICINA) REFERENCES OFICINA(CODIGO)
ON UPDATE CASCADE;

-- MODIFICO EL CODIGO DE LA CIUDAD DE OLOT POR EL NUMERO 13
SELECT * FROM OFICINA;
UPDATE OFICINA SET CODIGO = '13' WHERE CIUDAD = 'OLOT';

-- COMPRUEBO QUE TODO SE ACTUALIZO CORRECTAMENTE
SELECT V.NOMBRE, V.OFICINA, O.CIUDAD, O.CODIGO FROM VENDEDOR V
INNER JOIN OFICINA O ON V.OFICINA = O.CODIGO
WHERE CIUDAD = 'OLOT';

-- 6. INCREMENTO EL CREDITO EN UN 10% A TODOS LOS CLIENTES CON UN CREDITO INFERIOR A 20000
SELECT * FROM CLIENTE;
UPDATE CLIENTE SET CREDITO = CREDITO * 1.10
WHERE CREDITO < 20000;

-- COMPRUEBO LA SUBIDA DE CREDITO DE DETERMINADOS CLIENTES
SELECT * FROM CLIENTE;

-- 7. CREO UNA VISTA CON EL NOMBRE 'PEDIDOSACI' CON TODOS LOS PEDIDOS DEL FABRICANTE ACI,
-- EN LA QUE SE MOSTRARA EL NOMBRE DEL PRODCUTO, DEL VENDEDOR Y TODOS LOS DATOS DEL PEDIDO
SELECT * FROM PEDIDO;
SELECT * FROM PRODUCTO;
SELECT * FROM VENDEDOR;

-- CREO LA VISTA
CREATE VIEW PEDIDOS_ACI AS
SELECT PROD.DESCRIPCION, V.NOMBRE, PED.* 
FROM PEDIDO PED
INNER JOIN PRODUCTO PROD ON PED.PRODUCTO = PROD.CODIGO
INNER JOIN VENDEDOR V ON V.CODIGO =  PED.VENDEDOR
WHERE PED.FABRICANTE = 'ACI'
WITH CHECK OPTION;

-- COMPRUEBO LA VISTA PEDIDOS_ACI
SELECT * FROM PEDIDOS_ACI;

-- 8.CREO UNA VISTA LLAMADA VENDEDORES_AMPOSTA ACTUALIZABLE CON LOS VENDEDORES DE LA OFICINA 14
CREATE VIEW VENDEDORES_AMPOSTA AS
SELECT * FROM VENDEDOR
WHERE OFICINA = '14'
WITH CHECK OPTION;

-- COMPRUEBO QUE ESTA CREADA
SELECT * FROM VENDEDORES_AMPOSTA;

-- COMPRUEBO SI PUEDO AÑADIR UN REGISTRO A LA VISTA QUE NO SEA DE LA OFICINA 14
INSERT INTO VENDEDORES_AMPOSTA
VALUES ('21', 'ANTONIO RUIZ', '3', 15000, 29000, 35, '1995-02-12', 27, '8', 'REPRESENTANTE');

-- COMPRUEBO QUE SOLO SE PUEDEN AÑADIR REGISTROS QUE PERTENEZCAN A LA OFICINA 14 POR LA CLAUSULA
-- WITH CHECK OPTION 
INSERT INTO VENDEDORES_AMPOSTA
VALUES ('21', 'ANTONIO RUIZ', '14', 15000, 29000, 35, '1995-02-12', 27, '8', 'REPRESENTANTE');

-- COMPRUEBO QUE REALMENTE ESTA INSERTADO
SELECT * FROM VENDEDORES_AMPOSTA
WHERE NOMBRE = 'ANTONIO RUIZ';

-- 9. BORRO EL CAMPO OBJETIVO DE LA TABLA OFICINA
SELECT * FROM OFICINA;
ALTER TABLE OFICINA
DROP OBJETIVO;

-- COMPRUEBO QUE YA NO ESTA EL CAMPO OBJETIVO EN LA TABLA OFICINA
SELECT * FROM OFICINA;

-- 10. MODIFICO LA LONGITUD DEL CAMPO NOMBRE DE LA TABLA VENDEDOR A 40 CARACTERES
SHOW COLUMNS FROM VENDEDOR;
ALTER TABLE VENDEDOR MODIFY NOMBRE VARCHAR (40);

-- COMPRUEBO LA MODIFICACION
SHOW COLUMNS FROM VENDEDOR;

-- 11. BORRO TODOS LOS PEDIDOS DE LA VENDEDORA SUSANA PRAT
-- COMPRUEBO LOS PEDIDOS DE SUSANA PRAT
SELECT * FROM PEDIDO
WHERE VENDEDOR = (SELECT CODIGO FROM VENDEDOR 
				  WHERE NOMBRE = 'SUSANA PRAT');

-- ELIMINO LOS PEDIDOS DE SUSANA PRAT
DELETE FROM PEDIDO
WHERE VENDEDOR = (SELECT CODIGO FROM VENDEDOR
				  WHERE NOMBRE = 'SUSANA PRAT');

-- COMPRUEBO QUE SE HAN ELIMINADO 
SELECT * FROM PEDIDO 
WHERE VENDEDOR = (SELECT CODIGO FROM VENDEDOR
				  WHERE NOMBRE = 'SUSANA PRAT');

-- 12. BLOQUEO LA TABLA PRODUCTO PARA ESCRITURA E INTENTAR MODIFICAR ALGUNA FILA DE DATOS

BEGIN;

/* PRIMERO BLOQUEO LA TABLA PARA ESCRITURA DONDE SOLO YO PUEDO LEER O ESCRIBIR EN LA TABLA
   MIENTRAS LOS DEMAS USUARIOS QUEDARIAN BLOQUEADOS A LA ESPERA DE QUE TERMINE DE ACTUAR 
   SOBRE ESTA TABLA EN CUESTION */
LOCK TABLES PRODUCTO WRITE;

/* AHORA CON LA TABLA BLOQUEADA EN MODO ESCRITURA ME PERMITE SOLO AMI LEER Y ESCRIBIR SOBRE
   ELLA, PROCEDO A LEER LA TABLA HE INSERTAR UN REGISTRO */
SELECT * FROM PRODUCTO;
INSERT INTO PRODUCTO
VALUES ('333', 'HP', 'OMEN 40W', 1500, 235, 10);

COMMIT;

/* UTILIZO LA SENTENCIA UNLOCK TABLES PARA DESBLOQUEAR LA TABLA Y QUE LOS USUARIOS EN ESPERA
   PUEDAN SEGUIR TRABAJANDO SOBRE ELLA */
UNLOCK TABLES;

-- 13. INICIO UNA TRANSACCION, INCREMENTO EL PRECIO DE LOS PRODUCTOS DEL FABRICANTE 'FEA' EN 
--     3€UROS, COMPRUEBO LA OPERACION Y DESPUES LA DESCARTO HACIENDO UN ROLLBACK
-- EMPIEZO LA TRANSACCION
START TRANSACTION;
	UPDATE PRODUCTO
    SET PRECIO = PRECIO + 3
    WHERE FABRICANTE = 'FEA';

-- COMPRUEBO LA OPERACION
SELECT * FROM PRODUCTO WHERE FABRICANTE = 'FEA';

-- DESCARTO LA OPERACION CON UN ROLLBACK
ROLLBACK;

-- COMPRUEBO NUEVAMENTE LA TABLA PRODUCTO
SELECT*FROM PRODUCTO WHERE FABRICANTE = 'FEA';

-- 14. COMIENZO UNA TRANSACCION CON LA INSTRUCCION BEGIN, INCREMENTO EN 10€ EL PRECIO DE TODOS
-- LOS PRODUCTOS DEL FABRICANTE 'ACI', DEFINO UN PUNTO DE CONTROL LLAMADO 'PASO1', BORRO TODOS LOS
-- PEDIDOS DE 2015, HAGO UN ROLLBACK AL 'PASO1' Y DESPUES REALIZO UN COMMIT

-- COMIENZO LA TRANSACCION
BEGIN;

-- INCREMENTO EN 10 €UROS EL PRECIO DE LOS PRODUCTOS DEL FABRICANTE 'ACI'
UPDATE PRODUCTO 
SET PRECIO = PRECIO + 10
WHERE FABRICANTE = 'ACI';

-- CREO UN PUNTO DE CONTROL LLAMADO 'PASO1'
SAVEPOINT PASO1;

-- BORRO TODOS LOS PEDIDOS DEL AÑO 2015
DELETE FROM PEDIDO
WHERE FECHA LIKE('2015-%-%');

-- DESAGO LOS CAMBIOS VOLVIENDO AL PUNTO DE CONTROL 'PASO1' UTILIZANDO UN ROLLBACK TO
ROLLBACK TO PASO1;

-- REALIZO UN COMMIT
COMMIT;

/* DESPUES DE REALIZAR EL COMMIT LOS CAMBIOS QUEDAN PERMANENTES Y VISIBLES AL REALIZAR CONSULTAS 
   COON UN INCREMENTO DE PRECIO DE 10€UROS EN LOS PRODUCTOS DEL FABRICANTE 'ACI' */

SELECT * FROM PRODUCTO WHERE FABRICANTE = 'ACI';